name: Fetch Prices & Build NAV (debug)

on:
  schedule:
    - cron: "15 21 * * *"   # daily ~05:15 SGT
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-data:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Show tree
        run: |
          pwd
          ls -la
          echo "Default ref: ${{ github.ref }}"

      - name: Ensure paths
        run: |
          mkdir -p data/quotes scripts/ci
          ls -la data || true
          ls -la scripts || true
          ls -la scripts/ci || true

      - name: Check stocks.json exists & is valid JSON
        run: |
          if [ ! -f data/stocks.json ]; then
            echo "::error::Missing data/stocks.json"
            exit 1
          fi
          sudo apt-get update && sudo apt-get install -y jq
          if ! jq . data/stocks.json > /dev/null 2>&1; then
            echo "::error::data/stocks.json is not valid JSON (trailing commas? comments?)"
            exit 1
          fi
          echo "stocks.json OK:"
          head -n 60 data/stocks.json

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Versions
        run: |
          python --version
          pip --version

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install --verbose yfinance==0.2.43 pandas==2.2.2 numpy==1.26.4

      - name: Smoke test yfinance fetch (FX + first symbol)
      run: |
        python - << 'PY'
        import json, sys
        import yfinance as yf
        from pathlib import Path
        p = Path("data/stocks.json")
        stocks = json.loads(p.read_text())
        sym = (stocks[0].get("symbol") or stocks[0].get("ticker"))
        print("Smoke test for first symbol:", sym)
    
        def rows(t):
          df = yf.Ticker(t).history(period="1mo", interval="1d")
          print(t, "rows:", len(df))
          return len(df)
    
        # Try FX fallbacks in order
        fx_ok = rows("INR=X") or rows("USDINR=X")
        if not fx_ok:
          print("WARNING: No FX rows for INR=X or USDINR=X (will fallback inside script)")
    
        # Symbol should fetch something
        if rows(sym) == 0:
          print("ERROR: no rows for", sym)
          sys.exit(1)
        PY


      - name: Verify fetch_prices.py exists
        run: |
          if [ ! -f scripts/ci/fetch_prices.py ]; then
            echo "::error::scripts/ci/fetch_prices.py not found (wrong path?)."
            exit 1
          fi
          sed -n '1,120p' scripts/ci/fetch_prices.py

      - name: Run fetch_prices.py (debug)
        env:
          STARTING_CASH_USD: "10000000"
        run: |
          set -euo pipefail
          python -u scripts/ci/fetch_prices.py

      - name: Show generated files
        run: |
          echo "quotes dir:"
          ls -la data/quotes || true
          echo "nav_summary.json:"
          cat data/nav_summary.json || true
          echo "nav.json head:"
          head -c 1000 data/nav.json || true
          echo

      - name: Commit changes (if any)
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add data/quotes data/nav.json data/nav_summary.json
            git commit -m "chore(data): update quotes & nav [skip ci]" || true
            # If branch is protected, don't fail the job:
            git push || echo "::warning::Push failed (protected branch). Data was generated but not pushed."
          else
            echo "No changes to commit."
          fi
